import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=100&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; gsScrollPos=; sc_expview=0; .ASPXAUTH=B5356A7278624DB8115AB36D4AD235FDFCF1EEA5DB28872EFDB6ED892AFE96BB1D2BB7A0F9E94A1EBB5607D1308D957EEF5D7A3DBD9F644FC0118F16CC9D527F667ABB6ABCC75F15467F0494139A7EA1E187934A38BD33C866CDA43CFC3C8ADDB94927BC544C0F46C64210103A9F2BD682BED4F8D2329686D0D0EDDB815D58EA2DC5ACB4D075B126B58F8AC2824679568737AA608AF68B37D39CE1D7C194681CC6062F06C01E15695B37345A68B3289F3DF3A926BE7D60063929BE00754547B46B71E006F192C14680CC8DFD0BEF5ACEE93FD6E67D0439D22EFFAE77EABCCE25A066CFB0A1006971FF5BF2F951FB6E185CA68405EF681F083BDF67763008B8838060A8CB2143D7722BD72280DA72CE24D1B932B6389EDAD04F257E69DE240A2E53790A16FFB160EB6D0FC454DD728322D0F7300C9F9071A503FB2B859384FCD8C931F4DDDC4AC497BB4641EE7C0FBB5BCE6126A9E643F42F6AF2C87DBC35F5C18B3DF04137A8BB651A6A157873B12B2E2DD6256C039AD3D229812F9309788177540CDB56165BFA264D9AD70EEF96917DA41563C7E022BBB7CA83B9ED8789850C35BB48A8D1D82C0F4C4BB28FA640EEFA0E680B41824AB267F3724E5EE1C39CA5E676D9FDDEEB56E701227EC95CDE3E224D93F9A037EF2EB729B1D842BED0CA6EB9BA413073498B4F672F58C86434641ACD8B03DAEDE0D69588B58BC263FB096AA5335322BE1564F70019C3FDDD26BDB35A3A8347C961CAB6A84F653E743E13B2'
};

  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}