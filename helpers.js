import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=58D16E87B05CACA93CB25DA78E4BC520F595577BDED92E08CFDC5BEF0A7D818E29455471282D8BC7EC0002FF7CED8B05E4A89F45DC78965A52CF0013416B750A9CF72F158C1B8E866D7504E3AD5FB874DD7259702FE7E2541E04B7D7E06C10927456A82B5756106B0B83B7317FC3E4CA85CB00DBA5A06457A345DA49017E80A973646E764CCBB977CC8736189662D07ACD2FABB879FBDEF6A6576AFA76872CF19A8F69716CACEEDE4445F07F23F5DEA8B8D985D6CD2DF41545C1F86D0D9DF1E9E169CCC260E630A7315B5F1D29B691A270D43FE90DA8F182C687B5B88371D5A03A34B3C46293E2710D601D065AA5A934514DD47A676B1E019467B1357A751A00F8AF90AC5C9AEFAE1BDDE8BCE92C9EB803E569928C32CC0A636094AF15961C990230310813AA4345FF07371ACED1CE7178DD2BC38FDE502203DFE5EFD2D289877CC984B230FB1EFF3FA55F44A2D9696E27008DD2EEA25AFB1192DBE4FA6B43C951309312DD8E8029AB8AF499F4FA8DCBD28D1F5D6197A84A40A344FD0F5B179FD54AC98EE77070A9EB7A32DB32F19296E63AB0E4779CF7DE76F11968039716FB2C88AB7BD8DD72E5B7368ADC643F9E512B0FAC75DF95265D095EC4481F25AE33DD0C71F55E30B5F82A92413489B2C9962712137491F1F30C4BF4D66660964834372E2A840C6430BA39CE0578F1350124BEB77587EFDEC1DF015E5BB07FC0786595A0B2D1735E7E7167B25211DB89D996BF94C781B04E85710358EFC3CFF41231'
};



  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
