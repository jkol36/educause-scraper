import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://members.educause.edu/search',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=7829DCBB9030916EFFEE9C3B941FD4CEA17184294FC22E1EE06126D1E11ABAFDCA1A15A701FA5B8B6F328BAE5FCF921A09CAC5534173739F034099CD7F4CC9097EF3ED5908E99A1BEF5119EED09D55FAAE5C84BB61F2A596CD988DC686D22FEA38996E5362BEBDEF85C60EF73EF474E1726AF8A2C9F704049D5B181FF702ACC49F8C14E1A7479DEA15E8954C35F42E565612A571956DACB75175FB34FD03A004DD4E8FAFE2F39E1D74FEA6A4AC4629F030A799B9B8FDEDC1CF0759470375F4EEE800147C5921BB7DF902F8A4F2691DA484E7A9FC1640931AF78506608D3249A04F08C092611AEA76B4BA692E026201E704CCB10D9C7D2CCCF6DA269F91D4C1E0883B96163E12C1F5DFDDEE472674997C348B18FEF984CE1A9D63493E638C0315CA74EA972346E66FC6EA01CC5A854DD83A3F41F8345E36404CD6243D603126DB1AA7491C6F4E5C1AB58891911AC6213007AEA8DD772276C43437CE86ABBC86C953989980BF6119A041E7DA03F6CB2D0A68A1CA3F82A3882B1869900FA6A6CD674CB2F05B43CA9010F62A49EDD01AF6E5C1989E5BFEDDD5421A0E8E62EFB288FA5A40D9ACB1F2615493C8B5DE125802A21B500AD96C3B8B332BD39F1101A7A75A9C57A142DB820990F65E041A3DF02258B65CFFE761BEAEAB821C3510B3A5B38E29F97767359084BAA13370B5DAED91C5FE024E3ABB84EB2C68EA0A79EE00614BBB4F5806439F29C523D388D45D13AD6F19F4B6AD3C0FA81D8801A754DFDE0F9B'
};


  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
