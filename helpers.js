import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; gsScrollPos=; sc_expview=0; .ASPXAUTH=E9212591A5F592829FC76D3CA56BEB2C1164F852E76804FCB439738748860EA67B7A9BCED6847698CC985A150B5CB38664B80D6EBA16549CD38DCACE3DE6A175B13217CA09B79B7B65E1B827CD5ADCFE200F1729C7D46E98F76979121020819B8CDEEDCBE8BE8409C7888F7D6E91035C0023A2B3C61181BCB7F6825F746E5BC2D898CABB1CAC1B8F7F9537B7B7C387ED50844C47E723F85AD1F3DDF913BD2383E800628F4C50FA2B5DA028A5F5D1F7740BFCD76BBE02675D036B2E9FAC2EC5AFD7DCBAE38977F0864973ED14D128CB60CCE2A1AE3C76E08623D62B41F57A32E3690874706773A773AF26F0AA5B1E1FEF1E4DBC7BEAC4002D9F287C18C7FAB07E088D4AFADB0251E28B297644C7BE3F5C0BA547ACBD2E0BE059756883FCAB6BAF1AF054A94C089E0B4FFC28C5837DD7CEB4B81401B1277E67595DFCEC21D97C3ADBE5B5CA2E73D5CADFFDEE362B04FC509EA3BBABEFC943779DFA764ADD075F64664B4FA60B5DAAE29337D5B9B180BC7FAE70342ED7767D0D8B2F84B125EB1256CEDFFBAB7A7A7FAFB3C52B9CB0DE3C5FF581208670ECDC8127ECC664FEB32A7F8C8B1042550076CA20AE26D3941FF6F0FBA2199065B85577018376E977E4DE18817881F81DB5024CD9D645540BF442AEED7BCEA54982A06A5A05DDBD75A48C1036DB2CD1462448B84EF5A912E10394227B573AA879CA55A351F8A5EC6B1B9184150678879B48E01FC22E8DFA302D1C928BC81D21DFAE7ABA23E8E11C3C6F9C0A'
};

  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
