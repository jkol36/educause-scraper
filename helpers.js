import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=A66D85B895E19583FA4BAD19F284F8406C0909686079139FEEB0BFC3B088DE62C77AA34F2872E4B4DAEFBD0853CF52BA5D92D27C026FEED2444CC4165768C34314F22EBA481F2E4BDB7641F7CC2FB2CFFE24141417151A080D08EB1E2EDBC749F6FB9E733613738936F7CD753CCC2768AB5A3E174CCE2E157D30A19C285F3E03A3BF30815C51842285AA7572998E9B5D19D34E38598E38F425E7A96053A928E184705D35953978683C99072A214B076809949C5DC888766ACED17BD91923650373F855C4387BD474E30234E22A357F0A70601FA06533A0C9A474D74F7542BD403D5774BE0B8194E688631855C4A29839BA75F2B554B4DD20DDF87ADB6A0F3CB8C5BA22699A9EBAC959C8FBB2A3B30F60B18098D6C67993299D0AB34A6C97F47A502BE2770783F55A0A75E180B004E3549DB665CE81AFF63D5ACAE3ADC47EF4F0E18036BC5DF0531A8DB97D87E86EE56C3CEB001168FB1047DB583ECC3343153D3EC00D932FA6A9154CC7785D80937F4A7585EA49A703892DFFD04DD5252467B9208E8D35E27671D4F65D7FC15339D8DB8789B7D5ADF9F274C88895720DB2A756304A2BBDAA94B34DE89FB8A33EBCCE670C87168AB949382460E56952E845370A61E619ACB64A27AB536C6C4600D1B2565347A9E6AA6549F47212074A940AC174A6842EFC6FC1003F46AB745DA75A3CD20EFFEDE3EB68380E7601DDD976FF06EF1346DE7BFBC3ACADC058E02EB3A193F260FF1F743856AE94DF14F6B236CDF942'
};




  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
