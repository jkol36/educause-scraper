import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=066794C9A59C6DF7C93EDC2C291CBADAAEFF13F9FBE57537296BDD15FA0F5AA4771DF2F8FF3BB46DFDA6CB0CB612E6C477D85E6D5876312128BE3BF684D4F3CE7A29C528D9EF89266598BE37872694D2A963F6F1BDE9A670B7E1497F6B7747617F57C52D7DFDD32830690702331B9366F01A5C58EEDE8239009AA2805D242A8357B4E293002BA6C02E25D462E0C48A90681B5A726BF9E59E2A045102AAEAA73EC6E5BBBA240A1087B0ADDEDF78A9A6E744ECDDFDE4C715E065B9CA93BD158A6390D7AE7E6CC565643FB9805C574D9FFF002BB2776F77188E96D892E5FAD217912605F942C48DDBF25CF963C22BFFFE10DEA947518A370A331372C5D89DC5A15A1F0575BF6C9F40DBD9373E996045227452BBBBD6C09D918BDD0AF5242F63DC50701E6E5468904AA22607895A80F1CB96F8A7D8A62E9F63C0434A32530B95984685B56197EDB1CCBB84957634D95498BC1E7974A9674C96DC8F7F24C0D951128DBDB145BE8F26D15062C81776236703EB2BE0745A8D0BE09228EFF7A92CA91F931321C6AFC184CF106656930D3CAF77A5FD14903CAD1329179602357247A652735A5C36AAE1728768F273454CFA480253977BDFFA6B7A7EAC0AA85094807ED6D90604EBD9888B2B5897AFF25933A93FFD4A244C9EEC58E554712A5BC46F5CE198D2203BAD8C1AAC25F906593231BDC62E2F072E6CCB762A4F0FA7ECFEC4373E5125052ED7B239B04B09A59B7990C5E5BD227DAB4AEE032A44C63403A1B70E678F'
};




  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
