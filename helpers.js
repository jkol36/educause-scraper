import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=8916F272157698D1731967608F25CE05C3092467161E697847CE735CA8A46A710EFE4076F0923C97471544AA4E5BB73FCFC3A6B77717EEE974CBEAEE9D5183D53A525AFC2C241E563A021FB7468B312F6F75D5115F39922CDC4E97306CD0B492D3DA7C022BE440471C51CA8BB7DA8D068CE0C696100844BD520AB2BB4C6B409F508324E91BE5BA3FDCF8E587EA41A6431367F0832D960780261CE12DEFCC35596367FA6C53069EF82829B8A209F99CE45E312C1134D553D75FB9562D7CE01A6BC0D3746D6F60AFE361B8573C08A1811BA066C95279175FA180935EAB69BB01ADAC7FF9AB5D6DCA6C5407459A93AE27E1655F1EA4917B2348FF3B335BA9F9ED33BD54736F539E1F32C6532D8601C52E399F2EAF10F34549C712389A5EFC79369E8D5E7EBEBCB501C0113636DB088582B344C22F907D97EDFF66749C7E317EC63B71A4D68DBC2199B9BBDC8EE78586D10DEC523B406BF84925BA2BEBF61EC7600F546663AC82BF90B16A4D434A3BFF710CF42FE1B473CC26167BEE9E9AFEEE621DEEE769D372F7CE354A1A2DA43B27926F4B61C30201664E404B1DC6A466E488D3D222506BCE41E4C7C8F9BFF7766C945D1C841DD0AD529C80D48ED6C39C1D492E33BFFDC5DD79FD2C84E703F8FF2B51DC74BE343C24A2A6460625013EFC53F349F5DA7819C00D63E7FE250E4872A673D1FDF7C18FA3AEEE4EE7FF5B3B59EFDB048FC1C73B17CF32FE3753F2478CE0F3E53C98322EFFE908F03E6D5E78BC82D57A'
};




  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
