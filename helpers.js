import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=10&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=40A51C129911B61B502B52A14FF8623B372C42603CAD6FF15EC7E5EA65EB205316B9D979970EB1DFC38C795822F637F71F05AD89FCF422C5F1935E53D42773EEA74D4443ADF38A9A7B8A17F2305F08D9A8EBCFB31DED12E8815CEE6C1E79DA23D2F2BC53ACC09D4CA7BFDF063F8BE4F4AB0C107CB0875D24522CFBFD29539C317EAAC9985B68CEBFE87F4B1E987F2BE75E942F93C67B7FB3E3C73EB79DB6B4C1D60AB2154EFC0C21A8F3B409305C3F7FA05E5411A35DF83DD56BD3EB069ACFC9C5C5A7C789093777C10CFE46C3610453702E7D38F23C149E7CD2E69108B5D01521F61A1E7F99C51C5EE1020FB6D35D55DFBD0E0CF8D16DAA73721D2829975BE29F6964DB148995FBD3609231C1B65158BB7E11F62783F2468C09E0B82CCFF4E8F3B618DC0F06F7BB2AC5FAFA11F4379C42A2AF33A96252B840D7338AE4BC364FD00595542230E38B299A8A6A0DACC6D1C5EE5932AE115954044410F3BCCF089D077ED42F9506C833C5932987AFFC66C416635011B1C390E218866411059A65AE01511087E1B62AFEBEE6B9ED96884575AC898B31806E1C49D92B8E425A71EC67FF642A8C28E8080DDDD879D434D7B27688C8BD2337A6066512422BB7209CA833BA6432B29CB0A88DEC0E4C1DB80A224DFA94FD3326B31B30D893F336D2CFED4C35BAD3A86A9218FDF32CF04F34AA6E65B13ADE132CFE929BB298F2B7077F34274F7BE28277B8E3F0E11113A08D7C2F7A1B47DFE40F36D59243505F76A7E986DE'
};


  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}