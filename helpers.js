import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; sc_expview=0; .ASPXAUTH=4B42019D95543784DD7C861B92298BB2496DD7EDD4EC38ABCD7930231A5143F38AAB511A233DA04B9C1D9505D51B2F8C24EE43460C7D65FEC3AAC1AD30E3B2EF84090FD7FEC35F0C202BB63983591B9874FA747F94ECB08C19AC650B2A31809115AE84E9476B6986781C06D3A165C086CF3A427B945CD3833BA31A856DA34C401A41F56CFD1CE33D3A0FED84D80342EBBDC168EA27FB626F5101E8EBF2BC0009947DE14B014599D3A7E4AA4E3F19AD17CF77DB0956494774AE22C122FE2D86DE1E2929F951EE38A983ED26F70CC23AD96928690F6E6225A836AF576080BE0486724CFC79C00340C8A4B180CB25F4035CB1039BC6FD571BCB8E4E0E456B63CB0E6766960DD4190EBC576DB55FFA51E5D6604A969FBF1315FCA3908345F8141ED151E021ABE24BA2B9F03C0FCB93248A3A01BEDCB24705ADB352B188F18B5FF1301F83478CFD40F68147EB6EA338761B5ED3E0E2CA88FA59C2EE249D3EC9FD446A64B26C7BB96D83624DC364DA9DEB5150477A6657C05F92A526B133E08FF1804A2FCB80476967297CC931236B760B2F79E134014CEE4CE71B0B9F24141170E24E0F3EFFB7B4A38C014A4234F577367BD363886E77F5487C6ED4115AFB35AE6BD4EEF05B66317CC35F851BBCC1D66AB208A1894B104C729B96439BC84CE793989AD1FA7546D8EB7568B57BF51C7F33AB614166AF69B0F23FDB1EAA8344D67F964FDAC5B905E09575F49567D9F006B67FEA36D5A681E1CE3447825DD83BC527F576'
};



  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
