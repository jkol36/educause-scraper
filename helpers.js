import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1222281838.1495072464; gsScrollPos=; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=8F8ED30CD4D26C8F752AEC3C36D0916C550CBB99B62EA938ED33FBF1AACD84048E9C4FD37D288EDE60D24449B803F75C2E19F7D19D75299F4693D7D8B94841E7D70D8C2BF2B19A8DCB4C3AC0EBB0F7215CBFA3B4C4E152687F5975E4C3D87AEAA1660704BCC12F67577A3A37DE6478E330318A2E5C3C61F18D6831F2919B332059AF29AE57030427F9D3680C46721B7F05AEC4173C9CF4FEBF9C5ADC88B3B13243855CD44BED347786993D62EC39FC06FEFF7AE82852CD6C011216A607B355518CCF887CEB86163923B369657068A703B2726CD36582178E2E6B07F88B0E8AAAD5C3F119B55400B5B96F8137E828AF00521D62E517C13D413613BAA032F435E046F3D4270EFD352030BD38FB6C28D921334DCBD32294125DED405E959267C9D9AFBD3DBAC5743D479F88D53D113DE854012C8A57A0F1DE136B8E25ED13EF84EBC19239ED88C0EA3F911A471D12244038E8D8C92178B9199CE7F9057E6059B5EA74F5C374804A08B724D8C7D62656DEAA3B134614387F0373430D8E76CF98A29B42400479CB243ED073A00ACA55F77DE2918F90AA07F235FBB6F15FE14CD969234EBAEC0ED1A7BAC02AB27F1B65CA0B9FBB869EBEE9F15F9537ED0DF8C2EEF9D559136B91AA0594C9E588B7F0BB1321377FB2B39CBAFBD9EF4C398E885487C224AF2A866D954FB22FBB3AD3A8970B2CF3179A205895B74BBB40C09C94A694870E1A52022028DFF21DCC3CC06375C9CB8AC77BEA22A4F68BA654C67D8928AE8B86'
};






  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
