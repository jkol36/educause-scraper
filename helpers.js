import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=10&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
  var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=21B30977EAD442423D2019392D88B6D6A198948BDAD7D4AC71F1F21ABEF26DB48338F1D2524D642866F823A8240180C4C7BEFC3945301DF8ED35E9932DD595C9CDD03BAF3E42EE19CAF4056A430AF1EEECD2DCBEFB7BEAF2B8E8790DF63F9D7B63F07AD12D7D1ED1AB9061BFC6CDCD5C7D6A95DE47BE2DAC08E8FBA22B8CFF6912283940ABCACF919B47F2BE4713E3A0A84B424515BCCC0A4C36944C720C5CEB14C10F579B7C12EF8DA36E6644C338CFA4E599F24FA821D3F9D7CD33AAA005BF05C3B2C224A9AEDED345E11F81FD86A2C18C7E84664EABE90654F41F01556295CE0B7F09113ADF2A54B80F67A4FE9515BA9C7B5174F07356A9624E1F58CFDFBBA299FB9F2E5322064496E5D02590985CED08751F935580BDCC1E0C42B86F01A21028C3234B41A1C7DCED266285EB45D87D170226CDA020E444182C637BD2445A95D24EEB056C0E7402E48DFB8482C12E7428E540F390B173E4D88E8778F6D596A12DC3D431AAB6C336ABDADE5797E97D7D08C75A38DCBFC06160A640BA6749C6A0155289C8000544C86058F11959FB1E148BFC1D6355EAED2D99D5BC21E82CE84EC746A1875C1658C38A890A9E57A061B4BCEC3EDE1413FFD4F6B58A1130C93B640A6AB7CE8E5CCA7763F8419506A776111746A3FDAA859225963C47419283CA8ECB3A3C5C83D99BAF65EC4E38AABD32D28FFD84B6CCAD42A037B921C7E67D7F46E37894ACB8A2301E26C08E424A81E8B96C2721D8C53BFA0576AA145077DF50'
};


  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}