import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.976431317.1494972058; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=D110BD51628A488A3C83509C81F85FF4DCC6D68F282B57CBC57B61CCD53D3282348FA23B59EF89CB36E0E585F7DA4A0AA31B8C4DF0185A2122001FCFDEF036F1341DF11460F77393FFFEA2EC9B24545633E2B998C0A9511A5AF7E0EAE53D98DA2A48A3FBDD3AD8F22A08132D318257EC6F1FFC57E18310B0F4DA0F3A140D0DF4FC80CD059E1AF5F05D66F5B6F9C48FF2946E1BE848538EB7179E747CAAEA97CDC843503C4253CB1527B7EA275A37DA0DAFA191E43097D81D9F850C6BEFCDA14EB3A517409A6A402D79B6CEABFF472CA0726FB006503FA9528AC97B5B66BBC0FBE4F49E128627A199519EC10795639CC5AC7E2CB7A5F849D74D4C32266E55547E1219D107657C6B5125BB3987874071FAD4966196DCDE66AC83CF731D13093BDB1B66F655E156CF90E407A7ED7C7BD2EF2CAAE651D65A47C9BAC8AD5F17E74A0F7F6DF8B8F58B8D1BD3B2A6BFA097AA6CE77C3F39FDF4AA3A06320C914586DA216EDC1E140F0382E0250B190BBBB1E0A081D36BD9134692FC40F1EE2750D1CB317F113E49D31E468F0816AED235050B4B43CA16812FBEA31469E1F9950515F59845B222F0D6B0069EA2B9B3AC6D6B356628C19A91B5A32DAF30E893E6E688D36BFCEC8DA804962207E7612CF6186BAA12A14D0D736AA575B677452E2DF836A139F28C30322C72760111CEB66D1404254673997D243189B5CB71AD30D9747E3EE56FA36515FE6A09F8C3EFDE21BC4C7C1C48CDA0B80905644FAF99071BE9034FB0'
};




  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
