import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=20&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1222281838.1495072464; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; gsScrollPos=; sc_expview=0; .ASPXAUTH=7301C398F0F63F1E2655F77ABFF9CA5EBD59B390AF80490CB3CDF3FC0672C5A361378C1A8575B660385E240EE9677D6E5BA171304C6AB5CE4E65AD1B1954CAC3F9BA7B3C4BACD1206E01E11998AE1499D5E7872050B947D45AE70587824D69341D02C78BA2AD6AD78235C72C155C7F77B01C9A1677EAB4CCD032219B2ED04E349ACA23B968E6570005A329220B5DBD35947F4F7129B9432AAFBCA3CCF9ACB241739EE8F939EC2C4E2B9B1B1A047B7CE09CF564CAE2FFC6B96999E41E485081333F9E16AFC36133B1EE3A98536A3B9C325E7F2025CE0D02C7F52DAD3F3C41D8D25796023774B3966C1AF91AF52AEAE357F175B6E11329E5283BE45CA538059E132ADA4C48C54EC51C9DAA41749C15F10B5B8A29BD3BF3C5EB1F2BEFFB75A0323F8D33284D14ADF96CF771CF9E1498E5BECA65CBBF37E3A3082401FC4718D9241BFC94F901335FC465443C654FD656DBBB6A3500BFF14C48E0B52F4F6BCD427118AB5D8375EAE659017C35372225561B67AF2FD25C45B9E4B0FA47829A1A447F349A2B7F938114F11A78E0942F36C3054FE58BDB13BCBF57153FEA24C85A1CCEB952A4128266BB93376AC889F00AFF02C7F29B95F75178DCABB770BDD849075DF25B2D9561CFCFA2F541D75C7CB21CA5C5B6A749494B24297D45C777358B6A1B7483CB667B9806E5E645583BA01ADF48F0911916E6ACA4C5FFC2BF1170B3CC0989788B8860CF1269F5DBEC56E908998B016B420D55549B106C5C69050A12ED3C26'
};





  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}
