import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=10&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=6322501ADE202FFE614874FEDC21BCCAEFA59B698E6E7E450B400CA1943AD115F86440606F6727373119EB07B31DB0BFE53E143202DC999D2C8409E2D2F534C950A549D1EA00E62EFF8CC40D5EBB5A56F981AAFC57CABA852418936CEB7AE03C322F2E8926EF008F7D6E0F8034D93595341961CAD2BD9C1499C145F3FACD2B705EDBED5D72A875B6978F3D184ED5E839252C1BA4FA4F22DD48D9AFDF81B63F424181B67A3ED4377D9E4FDE7B556C87536CD875E57AA2766396A3F7BCF6B925FD5DEAC95024188C99249A1ADD7B41BCB8766EB8BE59658CF53F5083F415091FF7ABD731BA4426A7F73FEC117588AC335CF1EB337012941E52E60B6FAC8DB6A61FF342874E02FCBFC3CA0566D9F22BB217A7A120A5B85E2941C983F4E155602D4A59223E5EDB4DD0DA9E74B6AFD2C63DE95EAFD9CF65B953B9EB043FFA6999323F61E2859428AD7E9D2721C253287906D768D03A95428A40528D70779BDB57E4904E878B527F3A0E02FF7010EB7FBF6BD80052EFC336E99D7D5A5261E339CAF1D80615F2A3CD1465ECDB988A9FC7B3DC70672D28D56ECA1D7EAACC5F3630DE76039027D2458BC5FF2A29BF3FE543AB00C00BC460CD9BB6754C3AB55F4397B8AC13FB669A5475C00A9BBDA77C51EC49E2974E75E6C200BB8100B6DBCE62448152D0FC3C75BCF572600D8D528F12DCFB9C38F91BBAF2B8DC9C5E083C52DAD08B23E9B8D7146C728769068CAF4022887EE0B4256ECA473E9F64D600BE2CBA7C768B9D'
};


  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}