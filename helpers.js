import agent from 'superagent-bluebird-promise'
import fetch from 'node-fetch'



export const getProfileUrlsForPage = page => {
  let url = `https://members.educause.edu/api/MemberSearch?pId=4a86fa47-eb9b-4ef3-b6b6-f1a082160768&membertype=Individual&page=${page}&perPage=10&sortBy=relevance&sortOrder=desc`
  return agent
        .get(url)
        .then(res => res.body.results.map(result => result.fullUrl))
        .catch(err => err)
}

export const getMemberProfile = shortUrl => {
  let url = `https://members.educause.edu${shortUrl}`
  console.log('getting', url)
 var headers = {
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'en-US,en;q=0.8,sv;q=0.6',
    'Upgrade-Insecure-Requests': '1',
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.81 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Referer': 'https://sso.educause.edu/',
    'Connection': 'keep-alive',
    'Cache-Control': 'max-age=0',
    'Cookie': 'ASP.NET_SessionId=fl1ip2n313s41p3nikbpt1el; _ga=GA1.2.1941357446.1494862777; _gid=GA1.2.1582078006.1494862809; __RequestVerificationToken=-srYKlpoMATwPuykNmyGfUVJAxfx2Fnlao9eEw4-yjIfOD3z039KeizWJ9_3MG1C1BiLwCGQQtntBHjnxaqowg6zNYweQD5mhv-vDTU8iwY1; gsScrollPos=; _dc_gtm_UA-64677622-3=1; _gat_UA-16119816-1=1; sc_expview=0; .ASPXAUTH=E3AA20194B9F73DFB15D30A2E426D2A53671B38845E23EA440566784B58CD189B88B3C792D4944E846F061C9BBE81F301D2A92579B54F0964F6B775FEDFC576B3F05851FE6EFE45E772AD11DDD26B7E6FB72ADA229C7B6BCB9F6820E02AC2B6530545BE8EBB74419DD74ACA119F21D99C49B4A6A562832ACDAD18D6FC9CC0FB69E17630FDC0F1E3B20C074E3575E94096F2AA0B9C3E60C9F3E5702180B272A27482BCEF9BF614EF9BF19B4432B73AD8046B188568CBDD20EF13100233EEF42FC0F6B6435FC25EA20B772CF0D97504EA0F1D2DEFA4B750698C1E4027B7827E187829342455193BCA62CE4A49FCFA07F9020DE56B0934CFAE5A576788AE34DA4169D29E7BB8B061A2174BD1F95FFB9B83FC0D5936688462718CD488E5D2FD6AA3BE5A7510C7574CE187F43849743D26A80FCEBCB979B57380522652B3F345D2C364EB403F94E75B3AAAEC5015C0C8ADAA72F46F416114F489C3B3A9EEC5D9B0988C0381EA8D147C272014EBEA7BC2A60F657F74B3DEA5CD0D01E2BE34AA27EB8078EB973B259163AD9FE1A31B9CDE2A5483B500A9FD11B27131D06FD6C53FCDED4174E8EA6CCDCEAE1D30503E0E3C4D8C2881236C57354E4C4A135D1ACCFAA4BCE77A6E97C71DF6A019B42F139C3F319CCFAB91D4557FA208965BDC7673F92186F06F2A701CB8BCF8431C4CD56E929ED9E9C479EB74165693085B6ADE7E53B9805CD53A7B70F246A9D1CCCB4CAB0C914A81392B4C4161EDB4B4F9E994F26AA559F'
};


  return agent
          .get(url)
          .set(headers)
          .then(res => res.text)
          .catch(err => err)
}